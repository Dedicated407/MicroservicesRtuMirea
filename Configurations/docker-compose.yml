services:
  
  dezon-orders-api:
    container_name: dezon-orders-api
    image: dezon-orders-api
    healthcheck:
      interval: 10s
      retries: 6
      test:
        - CMD
        - curl
        - -f
        - http://localhost:8080/api/health
      timeout: 10s
    depends_on:
      orders-db:
        condition: service_healthy

  dezon-users-api:
    container_name: dezon-users-api
    image: dezon-users-api
    healthcheck:
      interval: 10s
      retries: 6
      test:
        - CMD
        - curl
        - -f
        - http://localhost:8080/api/health
      timeout: 10s
  
  keycloak:
    ports:
      - 8480:8080
    command: ["start-dev"]
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    image: quay.io/keycloak/keycloak:20.0.1
  
  KrakenD:
    container_name: KrakenD
    healthcheck:
      interval: 1m30s
      retries: 3
      test:
        - CMD
        - curl
        - -f
        - http://localhost
      timeout: 10s
    image: devopsfaith/krakend
    ports:
      - "8080:8080"
    command: [ "run", "-d", "-c", "/etc/krakend/krakend.json" ]
    volumes:
      - ./krakend:/etc/krakend/
    depends_on:
      - dezon-orders-api
      - dezon-users-api
      - keycloak
      - prometheus
      - grafana
      - jaeger
  
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./prometheus/:/etc/prometheus/
  
  grafana:
    image: grafana/grafana:9.1.2
    ports:
      - "4000:3000"
    volumes:
      - "./grafana/datasources/all.yml:/etc/grafana/provisioning/datasources/all.yml"
      - "./grafana/dashboards/all.yml:/etc/grafana/provisioning/dashboards/all.yml"
      - "./grafana/krakend:/var/lib/grafana/dashboards/krakend"
    
  jaeger:
    image: jaegertracing/all-in-one:1
    ports:
      - "16686:16686"
      - "14268:14268"
  
  influxdb:
    image: influxdb:1.8.10
    environment:
      - "INFLUXDB_DB=krakend"
      - "INFLUXDB_USER=krakend-dev"
      - "INFLUXDB_USER_PASSWORD=pas5w0rd"
      - "INFLUXDB_ADMIN_USER=admin"
      - "INFLUXDB_ADMIN_PASSWORD=supersecretpassword"
    ports:
      - "8086:8086"
  
  orders-db:
    image: postgres
    environment:
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "7000:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
